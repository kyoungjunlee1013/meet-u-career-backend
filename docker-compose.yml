version: '3.8'

services:
  backend:
    build:
      context: ./meet-u-backend
    container_name: meet-u-backend
    ports:
      - "8080:8080"
    env_file: ./.env
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      - AI_SERVICE_URL=http://ai-service:8000
      - JAVA_TOOL_OPTIONS=-Xmx512m       # 힙 메모리 제한 설정 추가
    volumes:
      - ./logs:/app/logs
    depends_on:
      - ai-service
      - redis
    networks:
      - meetu_net
    restart: always

  ai-service:
    build:
      context: ./meet-u-career-ai
    container_name: meet-u-career-ai
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000
    expose:
      - "8000"
    env_file: ./.env  # 추가된 env 설정
    networks:
      - meetu_net
    restart: always

  redis:
    image: redis:alpine
    container_name: meet-u-redis
    volumes:
      - redis-data:/data
    command: redis-server --appendonly yes
    networks:
      - meetu_net
    restart: always

  frontend:
    build:
      context: ./meet-u-frontend
    container_name: meet-u-frontend
    ports:
      - "3000:3000"
    env_file: ./.env  # 추가된 env 설정
    environment:
      - NEXT_PUBLIC_API_BASE=https://api.meet-u-career.com
    networks:
      - meetu_net
    restart: always

  nginx:
    image: nginx:alpine
    container_name: meet-u-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
    depends_on:
      - backend
      - ai-service
      - frontend
    networks:
      - meetu_net
    restart: always

networks:
  meetu_net:
    driver: bridge

volumes:
  redis-data:

